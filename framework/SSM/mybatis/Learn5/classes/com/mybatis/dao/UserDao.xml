<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.dao.UserDao">
    <!--配置返回值的映射关系-->
    <resultMap id="userMap" type="user">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="birthday" column="birthday"/>
        <result property="sex" column="sex"/>
        <result property="address" column="address"/>
        <!--一对多的关系映射， 配置封装account集合的内容 -->
<!--        <collection property="accounts" ofType="account">-->
            <!--column的aid与别名对应， 由于两表的字段都使用id名避免冲突，可以取别名-->
<!--            <id property="id" column="aid"/>-->
<!--            <result property="uid" column="uid"/>-->
<!--            <result property="balance" column="balance"/>-->
<!--        </collection>-->
        <!--多对多的关系映射,  配置封装role集合的内容-->
        <collection property="roles" ofType="role">
            <id property="id" column="rid"/>
            <result property="roleName" column="roleName"/>
            <result property="roleDesc" column="roleDesc"/>
        </collection>
    </resultMap>
    <select id="getAllIncludeAccount" resultMap="userMap">
        SELECT u.*, a.id aid, a.uid, a.balance
        FROM `user` u
        LEFT OUTER JOIN `account` a
        ON u.id = a.uid;
    </select>

    <select id="getAllIncludeRole" resultMap="userMap">
        SELECT temp.*, r.roleName, r.roleDesc FROM
        (SELECT u.*, ur.`rid` FROM `user_role` ur RIGHT JOIN `user` u ON u.id = ur.uid) temp
        LEFT JOIN `role` r ON r.`id` = temp.rid ORDER BY id ASC;
    </select>


    <!--在涉及到两个或多个表时避免 命名 冲突-->
</mapper>